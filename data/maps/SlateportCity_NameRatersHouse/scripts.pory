raw
`
SlateportCity_NameRatersHouse_MapScripts::
	.byte 0

SlateportCity_NameRatersHouse_EventScript_NameRater::
	lock
	faceplayer
	msgbox SlateportCity_NameRatersHouse_Text_PleasedToRateMonNickname, MSGBOX_YESNO
	goto_if_eq VAR_RESULT, YES, SlateportCity_NameRatersHouse_EventScript_ChooseMonToRate
	goto_if_eq VAR_RESULT, NO, SlateportCity_NameRatersHouse_EventScript_DeclineNameRate
	end

SlateportCity_NameRatersHouse_EventScript_ChooseMonToRate::
	msgbox SlateportCity_NameRatersHouse_Text_CritiqueWhichMonNickname, MSGBOX_DEFAULT
	special ChoosePartyMon
	waitstate
	goto_if_ne VAR_0x8004, PARTY_NOTHING_CHOSEN, SlateportCity_NameRatersHouse_EventScript_RateMonNickname
	goto_if_eq VAR_0x8004, PARTY_NOTHING_CHOSEN, SlateportCity_NameRatersHouse_EventScript_DeclineNameRate
	end

SlateportCity_NameRatersHouse_EventScript_DeclineNameRate::
	msgbox SlateportCity_NameRatersHouse_Text_DoVisitAgain, MSGBOX_DEFAULT
	release
	end

SlateportCity_NameRatersHouse_EventScript_RateMonNickname::
	specialvar VAR_RESULT, ScriptGetPartyMonSpecies
	goto_if_eq VAR_RESULT, SPECIES_EGG, SlateportCity_NameRatersHouse_EventScript_CantRateEgg
	special BufferMonNickname
	special IsMonOTIDNotPlayers
	goto_if_eq VAR_RESULT, TRUE, SlateportCity_NameRatersHouse_EventScript_PlayerNotMonsOT
	specialvar VAR_RESULT, MonOTNameNotPlayer
	special BufferMonNickname
	goto_if_eq VAR_RESULT, TRUE, SlateportCity_NameRatersHouse_EventScript_PlayerNotMonsOT
	msgbox SlateportCity_NameRatersHouse_Text_FineNameSuggestBetterOne, MSGBOX_YESNO
	goto_if_eq VAR_RESULT, YES, SlateportCity_NameRatersHouse_EventScript_ChangeNickname
	goto_if_eq VAR_RESULT, NO, SlateportCity_NameRatersHouse_EventScript_DeclineNameRate
	end

SlateportCity_NameRatersHouse_EventScript_CantRateEgg::
	msgbox SlateportCity_NameRatersHouse_Text_ThatIsMerelyAnEgg, MSGBOX_DEFAULT
	release
	end

SlateportCity_NameRatersHouse_EventScript_PlayerNotMonsOT::
	msgbox SlateportCity_NameRatersHouse_Text_MagnificentName, MSGBOX_DEFAULT
	release
	end

SlateportCity_NameRatersHouse_EventScript_ChangeNickname::
	msgbox SlateportCity_NameRatersHouse_Text_WhatShallNewNameBe, MSGBOX_DEFAULT
	call Common_EventScript_NameReceivedPartyMon
	specialvar VAR_RESULT, TryPutNameRaterShowOnTheAir
	special BufferMonNickname
	goto_if_eq VAR_RESULT, TRUE, SlateportCity_NameRatersHouse_EventScript_NewNameDifferent
	msgbox SlateportCity_NameRatersHouse_Text_NameNoDifferentYetSuperior, MSGBOX_DEFAULT
	release
	end

SlateportCity_NameRatersHouse_EventScript_NewNameDifferent::
	msgbox SlateportCity_NameRatersHouse_Text_MonShallBeKnownAsName, MSGBOX_DEFAULT
	release
	end

SlateportCity_NameRatersHouse_Text_PleasedToRateMonNickname:
	.string "Hi, hi! I'm the Name Rater!\n"
	.string "I'm the fortune-teller of names!\p"
	.string "I shall be pleased to rate your\n"
	.string "Pokémon's nickname.$"

SlateportCity_NameRatersHouse_Text_CritiqueWhichMonNickname:
	.string "Which Pokémon's nickname should\n"
	.string "I critique?$"

SlateportCity_NameRatersHouse_Text_FineNameSuggestBetterOne:
	.string "Hmmm… {STR_VAR_1}, is it? That is\n"
	.string "quite a fine name you bestowed.\p"
	.string "But! What say you, if I were to\n"
	.string "suggest a slightly better name?$"

SlateportCity_NameRatersHouse_Text_WhatShallNewNameBe:
	.string "Ah, good. Then, what shall the new\n"
	.string "nickname be?$"

SlateportCity_NameRatersHouse_Text_MonShallBeKnownAsName:
	.string "Done! From now on, this Pokémon\n"
	.string "shall be known as {STR_VAR_1}!\p"
	.string "It is a better name than before!\n"
	.string "How fortunate for you!$"

SlateportCity_NameRatersHouse_Text_DoVisitAgain:
	.string "I see.\n"
	.string "Do come visit again.$"

SlateportCity_NameRatersHouse_Text_NameNoDifferentYetSuperior:
	.string "Done! From now on, this Pokémon\n"
	.string "shall be known as {STR_VAR_1}!\p"
	.string "It looks no different from before,\n"
	.string "and yet, this is vastly superior!\p"
	.string "How fortunate for you!$"

SlateportCity_NameRatersHouse_Text_MagnificentName:
	.string "Hmmm… {STR_VAR_1} it is!\p"
	.string "This is a magnificent nickname!\n"
	.string "It is impeccably beyond reproach!\p"
	.string "You'll do well to cherish your\n"
	.string "{STR_VAR_1} now and beyond.$"

SlateportCity_NameRatersHouse_Text_ThatIsMerelyAnEgg:
	.string "Now, now.\n"
	.string "That is merely an Egg!$"
`

script SlateportCity_NameRatersHouse_EventScript_AbilityMaster {
    lock
    faceplayer
    msgbox(format("Hello, child. I am known as the Ability Master.\pI can train with one of your Pokémon to grant them an entirely new Ability.\pWould you like one of your Pokémon to change their Ability?"),MSGBOX_YESNO)
    
    if(var(VAR_RESULT) == NO) {goto(SlateportCity_NameRatersHouse_EventScript_AbilityMasterNo)}

    msgbox(format("Which Pokémon should I train?"))
    special(ChoosePartyMon)
    waitstate

    if(var(VAR_0x8004) == PARTY_NOTHING_CHOSEN) {goto(SlateportCity_NameRatersHouse_EventScript_AbilityMasterNo)}

    specialvar(VAR_RESULT, ScriptGetPartyMonSpecies)

    if(var(VAR_RESULT) == SPECIES_EGG) {
        msgbox(format("How foolish! An Egg cannot train!"))
        release
        end
    }

    special(BufferMonNickname)
    special(BufferMonAbilities)  

    if (var(VAR_RESULT) == FALSE) {
        msgbox(format("{STR_VAR_1} cannot learn any other abilities."))
        release
        end
    }  

    msgbox(format("Which Ability should {STR_VAR_1} learn?"))
    if (var(VAR_0x8006) != ABILITY_NONE) {
        bufferabilityname(STR_VAR_2, VAR_0x8006)
        dynmultipush("{STR_VAR_2}", VAR_0x8006)
    }

    if (var(VAR_0x8007) != ABILITY_NONE) {
        bufferabilityname(STR_VAR_2, VAR_0x8007)
        dynmultipush("{STR_VAR_2}", VAR_0x8007)
    }

    if (var(VAR_0x8008) != ABILITY_NONE) {
        bufferabilityname(STR_VAR_2, VAR_0x8008)
        dynmultipush("{STR_VAR_2}", VAR_0x8008)
    }

    dynmultipush("Cancel", ABILITY_NONE)

    // setting initial selected to a non-existant ID will always have it point to the first option
	dynmultistack(0, 0, TRUE, 4, FALSE, 0xFF, DYN_MULTICHOICE_CB_NONE)

    if (var(VAR_RESULT) == ABILITY_NONE) {goto(SlateportCity_NameRatersHouse_EventScript_AbilityMasterNo)}

    switch (var(VAR_RESULT)) {
        case VAR_0x8006:
            setvar(VAR_0x8009,0)
        case VAR_0x8007:
            setvar(VAR_0x8009,1)
        case VAR_0x8008:
            setvar(VAR_0x8009,2)
    }

    bufferabilityname(STR_VAR_2, VAR_RESULT)
    msgbox(format("So {STR_VAR_1} should learn the {STR_VAR_2} Ability?"),MSGBOX_YESNO)

    if(var(VAR_RESULT) == NO) {goto(SlateportCity_NameRatersHouse_EventScript_AbilityMasterNo)}

    msgbox(format("Excellent. We shall begin at once!"))

    special(ChangeMonAbility)
    fadescreen(FADE_TO_BLACK)
    delay(10)
    playfanfare(MUS_OBTAIN_ITEM)
	waitfanfare
    closemessage
    fadescreen(FADE_FROM_BLACK)

    msgbox(format("{STR_VAR_1}'s training is complete.\pCome back if you need to train another Pokémon."))
    release
    end
}

script SlateportCity_NameRatersHouse_EventScript_AbilityMasterNo {
    msgbox(format("I see. Come back when one of your Pokémon needs to learn a new Ability."))
    release
    end
}